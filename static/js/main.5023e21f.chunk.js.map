{"version":3,"sources":["App.js","serviceWorker.js","index.js","assets/res1.png","assets/res2.png","assets/res3.png","assets/res4.png","assets/res5.png","assets/attenuated.png","assets/inactivated.png","assets/protein.png","assets/recombinant.png","assets/rna.png"],"names":["App","props","naviToAboutVirus","window","open","process","naviToDefeatVirus","naviToScratch3","showModal","setState","showVaccineModal","handleOk","e","handleCancel","renderIconItemList","iconList","map","element","idx","className","key","onClick","onClickHandler","getIconItemClassName","group","src","icon","alt","name","openGamePage","item","nextPage","renderVaccineItemList","vaccineList","style","backgroundImage","href","target","rel","state","iconsList","res2","res5","res3","res4","inactivated","attenuated","recombinant","rna","protein","title","visible","this","footer","closable","onCancel","width","res1","React","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.5023e21f.chunk.js","sourcesContent":["import React from 'react';\nimport res1 from './assets/res1.png';\nimport res2 from './assets/res2.png';\nimport res3 from './assets/res3.png';\nimport res4 from './assets/res4.png';\nimport res5 from './assets/res5.png';\nimport attenuated from './assets/attenuated.png';\nimport inactivated from './assets/inactivated.png';\nimport protein from './assets/protein.png';\nimport recombinant from './assets/recombinant.png';\nimport rna from './assets/rna.png';\nimport './App.css';\nimport { Modal } from 'antd';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showVaccineModal: false,\n    }\n\n\n    this.iconsList = [\n      {\n        icon: res2,\n        name: 'Make Vaccine',\n        group: 1,\n        onClickHandler: this.showModal,\n      },\n      {\n        icon: res5,\n        name: 'Coding to Save World',\n        group: 4,\n        onClickHandler: this.naviToScratch3,\n      },\n      {\n        icon: res3,\n        name: 'About Virus',\n        group: 2,\n        onClickHandler: this.naviToAboutVirus,\n      },\n      {\n        icon: res4,\n        name: 'Defeat Virus',\n        group: 3,\n        onClickHandler: this.naviToDefeatVirus,\n      }\n    ];\n\n    this.vaccineList = [\n      {\n        icon: inactivated,\n        name: 'Inactivated',\n        nextPage: '/scratch1.html',\n      },\n      {\n        icon: attenuated,\n        name: 'Attenuated',\n        nextPage: '/scratch2.html',\n      },\n      {\n        icon: recombinant,\n        name: 'Recombinant Protein',\n        nextPage: '/scratch3.html',\n      },\n      {\n        icon: rna,\n        name: 'RNA',\n        nextPage: '/scratch2.html',\n      },\n      {\n        icon: protein,\n        name: 'Protein Subunit',\n        nextPage: '/scratch1.html',\n      },\n\n    ]\n  }\n\n  getIconItemClassName(group) {\n    switch (group) {\n      case 1:\n        return \"groupOne\";\n      case 2:\n        return \"groupTwo\";\n      case 3:\n        return \"groupThree\";\n      default:\n        return \"groupFour\";\n    }\n  }\n\n  naviToAboutVirus = () =>{\n    window.open(process.env.PUBLIC_URL+'/aboutvirus.html')\n  }\n\n  naviToDefeatVirus = () => {\n    window.open(process.env.PUBLIC_URL+'/defeatvirus.html')\n  }\n\n  naviToScratch3 = () => {\n    window.open(process.env.PUBLIC_URL+'/scratch3')\n  }\n\n\n  showModal = () => {\n    this.setState({\n      showVaccineModal: true,\n    });\n  };\n\n  handleOk = e => {\n    // console.log(e);\n    this.setState({\n      showVaccineModal: false,\n    });\n  };\n\n  handleCancel = e => {\n    // console.log(e);\n    this.setState({\n      showVaccineModal: false,\n    });\n  };\n\n\n  renderIconItemList = (iconList) => {\n    // console.log(iconList);\n    return iconList.map((element, idx) => {\n      return (\n        <div className=\"iconItem\" key={idx} onClick={element.onClickHandler}>\n          <div className={this.getIconItemClassName(element.group)}>\n            <img src={element.icon} className=\"iconImg\" alt=\"icon Not Available\" />\n          </div>\n          <div className=\"iconName\">{element.name}</div>\n        </div>\n      )\n\n    })\n  }\n\n  openGamePage = (item) => {\n    window.open(item.nextPage);\n  }\n\n  renderVaccineItemList = (vaccineList) => {\n    // console.log(iconList);\n    return vaccineList.map((element, idx) => {\n      return (\n        <div className=\"vaccineItem\" \n             key={idx}\n             style={{backgroundImage:`url(${element.icon})`}}\n        //  onClick={this.openGamePage.bind(this,element)}\n        >\n          <a className=\"vaccineName\" href={process.env.PUBLIC_URL + element.nextPage} target=\"_blank\" rel=\"noopener noreferrer\">{element.name}</a>\n        </div>\n      )\n\n    })\n  }\n\n\n\n  // main page\n  render() {\n    return (\n      <div className=\"pageContent\">\n        <Modal\n          title=\"Choose Vaccine Type\"\n          visible={this.state.showVaccineModal}\n          footer={null}\n          closable={false}\n          onCancel={this.handleCancel}\n          width=\"80%\"\n        >\n          <div className=\"vaccineSection\">\n            {\n              this.renderVaccineItemList(this.vaccineList)\n            }\n          </div>\n        </Modal>\n        <div className=\"mainContent\">\n          <div className=\"header\">Using Code To Defeat Virus</div>\n          <div className=\"body\">\n            <div className=\"left\">\n              <img className=\"leftImage\" src={res1} alt=\"background\" />\n            </div>\n            <div className=\"right\">\n              {\n                this.renderIconItemList(this.iconsList)\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/res1.6094db3c.png\";","module.exports = __webpack_public_path__ + \"static/media/res2.369d4fc0.png\";","module.exports = __webpack_public_path__ + \"static/media/res3.5b5a02ea.png\";","module.exports = __webpack_public_path__ + \"static/media/res4.94d4a0bb.png\";","module.exports = __webpack_public_path__ + \"static/media/res5.39920b3c.png\";","module.exports = __webpack_public_path__ + \"static/media/attenuated.efbad8f9.png\";","module.exports = __webpack_public_path__ + \"static/media/inactivated.4a44d387.png\";","module.exports = __webpack_public_path__ + \"static/media/protein.ee0c465c.png\";","module.exports = __webpack_public_path__ + \"static/media/recombinant.aef25b49.png\";","module.exports = __webpack_public_path__ + \"static/media/rna.40703c75.png\";"],"sourceRoot":""}